// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`insertStringToServer Saga should call the repoLoadingError action if the response errors 1`] = `
Object {
  "@@redux-saga/IO": true,
  "SELECT": Object {
    "args": Array [],
    "selector": [Function],
  },
}
`;

exports[`insertStringToServer Saga should call the repoLoadingError action if the response errors 2`] = `
Object {
  "@@redux-saga/IO": true,
  "FORK": Object {
    "args": Array [],
    "context": null,
    "fn": [Function],
  },
}
`;

exports[`insertStringToServer Saga should dispatch the inputInserted action if it posts the data successfully 1`] = `
Object {
  "@@redux-saga/IO": true,
  "SELECT": Object {
    "args": Array [],
    "selector": [Function],
  },
}
`;

exports[`insertStringToServer Saga should dispatch the inputInserted action if it posts the data successfully 2`] = `
Object {
  "@@redux-saga/IO": true,
  "FORK": Object {
    "args": Array [],
    "context": null,
    "fn": [Function],
  },
}
`;

exports[`insertStringToServer Saga should fork fetchIsLoading generator when loading 1`] = `
Object {
  "@@redux-saga/IO": true,
  "SELECT": Object {
    "args": Array [],
    "selector": [Function],
  },
}
`;

exports[`insertStringToServer Saga should fork fetchIsLoading generator when loading 2`] = `
Object {
  "@@redux-saga/IO": true,
  "FORK": Object {
    "args": Array [],
    "context": null,
    "fn": [Function],
  },
}
`;

exports[`requestHistoryFromServer Saga should call the repoLoadingError action if the response errors 1`] = `
Object {
  "@@redux-saga/IO": true,
  "FORK": Object {
    "args": Array [],
    "context": null,
    "fn": [Function],
  },
}
`;

exports[`requestHistoryFromServer Saga should dispatch the inputInserted action if it fetches the data successfully 1`] = `
Object {
  "@@redux-saga/IO": true,
  "FORK": Object {
    "args": Array [],
    "context": null,
    "fn": [Function],
  },
}
`;

exports[`requestHistoryFromServer Saga should fork fetchIsLoading generator when loading 1`] = `
Object {
  "@@redux-saga/IO": true,
  "FORK": Object {
    "args": Array [],
    "context": null,
    "fn": [Function],
  },
}
`;
